.multitoggle-switch {
    padding: 0px 1px;
    border-radius: 0.5rem;
    position: relative;
    top: 0.25rem;
    display: inline-flex;
    height: 1rem;
    margin-right: 0.25rem;
}
.multitoggle-switch input {
    display: none;
}
.multitoggle-switch label {
    cursor: pointer;
    content: " ";
    height: 0.9rem;
    margin-bottom: 0px;
}
.multitoggle-switch input + label.toggle::before {
    content: "";
    pointer-events: all;
    border-radius: 50%;
    position: relative;
    top: calc(-0.25rem - 1px);
    display: inline-block;
    width: 0.75rem;
    height: 0.75rem;
}
/* Default colour is blue on white when enabled, pale blue on grey when disabled */
.multitoggle-switch {
    background: #fff;
    border: 1px solid #007bff;
}
.multitoggle-slider label.toggle::before {
    background: linear-gradient(to top, #fff calc(50% - 1px), #007bff 50%, #fff calc(50% + 1px));
}
.multitoggle-switch input:checked + label.toggle::before {
    background: #007bff;
}
.multitoggle-slider:has( input:checked:disabled ) label.toggle::before {
       background: linear-gradient(to top, rgba(233, 236, 239, 0) calc(50% - 1px), rgba(0, 123, 255, 0.5) 50%, rgba(233, 236, 239, 0) calc(50% + 1px));
}
.multitoggle-switch:has( input:checked:disabled ) input:checked:disabled + label.toggle::before {
    background: rgba(0, 123, 255, 0.5);
}
.multitoggle-switch:has( input:checked:disabled ) {
    background: #e9ecef;
}
/* On: multitoggle-on is white on blue when enabled, white on pale blue when disabled */
.multitoggle-switch:has( input.multitoggle-on:checked ) {
    background: #007bff;
    border: 1px solid #007bff;
}
.multitoggle-slider:has( input.multitoggle-on:checked ) label.toggle::before {
    background: linear-gradient(to top, #007bff calc(50% - 1px), #fff 50%, #007bff calc(50% + 1px));
}
.multitoggle-switch:has( input.multitoggle-on:checked:disabled ) {
    background: rgba(0, 123, 255, 0.5);
}
.multitoggle-slider:has( input.multitoggle-on:checked:disabled ) label.toggle::before {
    background: linear-gradient(to top, rgba(0, 123, 255, 0) calc(50% - 1px), #fff 50%, rgba(0, 123, 255, 0) calc(50% + 1px));
}
.multitoggle-switch:has(input.multitoggle-on:checked) input.multitoggle-on:checked + label.toggle::before {
    background: #fff;
}
/* Off: multitoggle-off is grey on white when enabled, grey on pale grey when disabled */
.multitoggle-switch:has( input.multitoggle-off:checked ) {
    background: #fff;
    border: 1px solid #adb5bd;
}
.multitoggle-slider:has( input.multitoggle-off:checked ) label.toggle::before {
    background: linear-gradient(to top, #fff calc(50% - 1px), #adb5bd 50%, #fff calc(50% + 1px));
}
.multitoggle-switch:has(input.multitoggle-off:checked) input.multitoggle-off:checked + label.toggle::before {
    background: #adb5bd;
}
.multitoggle-switch:has( input.multitoggle-off:checked:disabled ) {
    background: rgba(233, 236, 239, 0.5);
}
.multitoggle-slider:has( input.multitoggle-off:checked:disabled ) label.toggle::before {
    background: linear-gradient(to top, rgba(233, 236, 239, 0) calc(50% - 1px), #adb5bd 50%, rgba(233, 236, 239, 0) calc(50% + 1px));
}
/* Hide/show real labels */
.multitoggle-label {
    display: none;
}
.multitoggle:has(input:disabled:checked) label.multitoggle-label {
  color: #6c757d;
}
/* add nth label rules as necessary */
.multitoggle:has( input:nth-of-type(1):checked ) > label:nth-of-type(1) {
    display: inline;
}
.multitoggle:has( input:nth-of-type(2):checked ) > label:nth-of-type(2) {
    display: inline;
}
.multitoggle:has( input:nth-of-type(3):checked ) > label:nth-of-type(3) {
    display: inline;
}
.multitoggle:has( input:nth-of-type(4):checked ) > label:nth-of-type(4) {
    display: inline;
}
.multitoggle:has( input:nth-of-type(5):checked ) > label:nth-of-type(5) {
    display: inline;
}
.multitoggle-slider-bare {
    border: none !important;
    padding: 0px 2px;
}
.multitoggle-slider-bare input + label.toggle::before {
    top: calc(-0.25rem);
}